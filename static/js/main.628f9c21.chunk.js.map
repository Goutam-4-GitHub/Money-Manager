{"version":3,"sources":["components/MoneyDetails/index.js","components/TransactionItem/index.js","components/MoneyManager/index.js","App.js","index.js"],"names":["MoneyDetails","props","balance","income","expense","_jsxs","_Fragment","children","className","_jsx","src","alt","TransactionItem","transaction","deleteTransaction","id","title","amount","type","onClick","transactionTypeOptions","optionId","displayText","MoneyManager","_Component","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","concat","state","transactions","titleInput","amountInput","typeInput","getTotalIncome","incomeTransaction","filter","eachTransaction","reduce","acc","getTotalExpense","expenseTransaction","getBalance","addTransaction","event","preventDefault","_this$state","find","newTransaction","uuidv4","parseInt","setState","prevState","_toConsumableArray","changeInput","target","value","changeAmount","changeType","_inherits","_createClass","key","_this2","_this$state2","this","onSubmit","htmlFor","placeholder","onChange","map","eachType","Component","App","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.628f9c21.chunk.js","sourcesContent":["// Write your code here\nimport './index.css'\n\nconst MoneyDetails = props => {\n  const {balance, income, expense} = props\n  return (\n    <>\n      <div className=\"each-amount-container amount-container-one\">\n        <img\n          src=\"https://assets.ccbp.in/frontend/react-js/money-manager/balance-image.png\"\n          alt=\"balance\"\n          className=\"amount-icon\"\n        />\n        <div className=\"amount-updation-container\">\n          <p className=\"total-amount\" data-testid=\"balanceAmount\">\n            Rs {balance()}\n          </p>\n          <p className=\"amount-description\"> Your Balance </p>\n        </div>\n      </div>\n\n      <div className=\"each-amount-container amount-container-two\">\n        <img\n          src=\"https://assets.ccbp.in/frontend/react-js/money-manager/income-image.png\"\n          alt=\"income\"\n          className=\"amount-icon\"\n        />\n        <div className=\"amount-updation-container\">\n          <p className=\"total-amount\" data-testid=\"incomeAmount\">\n            Rs {income()}\n          </p>\n          <p className=\"amount-description\"> Your Income </p>\n        </div>\n      </div>\n\n      <div className=\"each-amount-container amount-container-three\">\n        <img\n          src=\"https://assets.ccbp.in/frontend/react-js/money-manager/expenses-image.png\"\n          alt=\"expenses\"\n          className=\"amount-icon\"\n        />\n        <div className=\"amount-updation-container\">\n          <p className=\"total-amount\" data-testid=\"expensesAmount\">\n            Rs {expense()}\n          </p>\n          <p className=\"amount-description\"> Your Expenses </p>\n        </div>\n      </div>\n    </>\n  )\n}\nexport default MoneyDetails\n","// Write your code here\nimport './index.css'\n\nconst TransactionItem = props => {\n  const {transaction, deleteTransaction} = props\n  const {id, title, amount, type} = transaction\n\n  const onDelete = () => {\n    deleteTransaction(id)\n  }\n  return (\n    <>\n      <li className=\"each-rows\">\n        <p className=\"history-items\"> {title} </p>\n        <p className=\"history-items\"> Rs {amount} </p>\n        <p className=\"history-items\"> {type} </p>\n        <button\n          type=\"button\"\n          className=\"delete-button\"\n          onClick={onDelete}\n          data-testid=\"delete\"\n        >\n          <img\n            src=\"https://assets.ccbp.in/frontend/react-js/money-manager/delete.png\"\n            alt=\"delete\"\n            className=\"delete-icon\"\n          />\n        </button>\n      </li>\n    </>\n  )\n}\nexport default TransactionItem\n","import {Component} from 'react'\nimport './index.css'\nimport {v4 as uuidv4} from 'uuid'\nimport MoneyDetails from '../MoneyDetails'\nimport TransactionItem from '../TransactionItem'\n\nconst transactionTypeOptions = [\n  {\n    optionId: 'INCOME',\n    displayText: 'Income',\n  },\n  {\n    optionId: 'EXPENSES',\n    displayText: 'Expenses',\n  },\n]\n\n// Write your code here\nclass MoneyManager extends Component {\n  state = {\n    transactions: [],\n    titleInput: '',\n    amountInput: '',\n    typeInput: transactionTypeOptions[0].optionId,\n  }\n\n  getTotalIncome = () => {\n    const {transactions} = this.state\n    const incomeTransaction = transactions.filter(\n      eachTransaction =>\n        eachTransaction.type === transactionTypeOptions[0].displayText,\n    )\n    return incomeTransaction.length === 0\n      ? 0\n      : incomeTransaction.reduce(\n          (acc, eachTransaction) => acc + eachTransaction.amount,\n          0,\n        )\n  }\n\n  getTotalExpense = () => {\n    const {transactions} = this.state\n    const expenseTransaction = transactions.filter(\n      eachTransaction =>\n        eachTransaction.type === transactionTypeOptions[1].displayText,\n    )\n    return expenseTransaction.length === 0\n      ? 0\n      : expenseTransaction.reduce(\n          (acc, eachTransaction) => acc + eachTransaction.amount,\n          0,\n        )\n  }\n\n  getBalance = () => this.getTotalIncome() - this.getTotalExpense()\n\n  addTransaction = event => {\n    event.preventDefault()\n    const {titleInput, amountInput, typeInput} = this.state\n    const typeOption = transactionTypeOptions.find(\n      eachTransaction => eachTransaction.optionId === typeInput,\n    )\n    const {displayText} = typeOption\n    const newTransaction = {\n      id: uuidv4(),\n      title: titleInput,\n      amount: parseInt(amountInput),\n      type: displayText,\n    }\n    this.setState(prevState => ({\n      transactions: [...prevState.transactions, newTransaction],\n      titleInput: '',\n      amountInput: '',\n      typeInput: transactionTypeOptions[0].optionId,\n    }))\n  }\n\n  changeInput = event => {\n    this.setState({titleInput: event.target.value})\n  }\n\n  changeAmount = event => {\n    this.setState({amountInput: event.target.value})\n  }\n\n  changeType = event => {\n    this.setState({typeInput: event.target.value})\n  }\n\n  deleteTransaction = id => {\n    this.setState(prevState => ({\n      transactions: prevState.transactions.filter(\n        eachTransaction => eachTransaction.id !== id,\n      ),\n    }))\n  }\n\n  render() {\n    const {transactions, titleInput, amountInput, typeInput} = this.state\n\n    return (\n      <div className=\"transactions-app-main-bg-container\">\n        <div className=\"transactions-app-title-container\">\n          <h1 className=\"transactions-app-greeting\"> Hi, Richard </h1>\n          <p className=\"transactions-app-greeting-details\">\n            Welcome back to your\n            <span className=\"money-manager\"> Money Manager </span>\n          </p>\n        </div>\n\n        <div className=\"amount-container\">\n          <MoneyDetails\n            balance={this.getBalance}\n            income={this.getTotalIncome}\n            expense={this.getTotalExpense}\n          />\n        </div>\n\n        <div className=\"transactions-and-history-container\">\n          <form\n            className=\"transactions-outer-container transaction-container\"\n            onSubmit={this.addTransaction}\n          >\n            <h1 className=\"transactions-title\"> Add Transaction </h1>\n            <div className=\"input-container\">\n              <label htmlFor=\"title-input\" className=\"title-description\">\n                TITLE\n              </label>\n              <input\n                id=\"title-input\"\n                placeholder=\"TITLE\"\n                className=\"input-item\"\n                value={titleInput}\n                onChange={this.changeInput}\n                type=\"text\"\n              />\n            </div>\n            <div className=\"input-container\">\n              <label htmlFor=\"amount-input\" className=\"title-description\">\n                AMOUNT\n              </label>\n              <input\n                id=\"amount-input\"\n                placeholder=\"AMOUNT\"\n                className=\"input-item\"\n                type=\"text\"\n                value={amountInput}\n                onChange={this.changeAmount}\n              />\n            </div>\n            <div className=\"input-container\">\n              <label htmlFor=\"type-option\" className=\"title-description\">\n                TYPE\n              </label>\n              <select\n                id=\"type-option\"\n                className=\"input-item\"\n                value={typeInput}\n                onChange={this.changeType}\n              >\n                {transactionTypeOptions.map(eachType => (\n                  <option key={eachType.optionId} value={eachType.optionId}>\n                    {eachType.displayText}\n                  </option>\n                ))}\n              </select>\n            </div>\n            <button type=\"submit\" className=\"add-button\">\n              Add\n            </button>\n          </form>\n\n          <div className=\"transactions-outer-container history-container\">\n            <h1 className=\"transactions-title\"> History </h1>\n            <ul className=\"unordered-list\">\n              <li className=\"each-rows\">\n                <p className=\"row-title amount\"> Title </p>\n                <p className=\"row-title amount\"> Amount </p>\n                <p className=\"row-title\"> Type </p>\n                <p> </p>\n              </li>\n              {transactions.map(eachTransaction => (\n                <TransactionItem\n                  key={eachTransaction.id}\n                  transaction={eachTransaction}\n                  deleteTransaction={this.deleteTransaction}\n                />\n              ))}\n            </ul>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\nexport default MoneyManager\n","import MoneyManager from './components/MoneyManager'\n\nimport './App.css'\n\nconst App = () => <MoneyManager />\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}